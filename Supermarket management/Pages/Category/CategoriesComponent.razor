@page "/category";

@attribute [Authorize(policy:"AdminOnly")]

@inject ICategoryUseCase categoryUseCase;
@inject NavigationManager navigationManager;


<h3>Categories</h3>

@if (categories != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th></th>
            </tr>
        </thead>

        <tbody>
            @foreach (var category in categories)
            {
                <tr>
                    <td>@category.Name</td>
                    <td>@category.Description</td>
                    <td>
                        <button class="btn btn-link" type="button" @onclick="@( ()=>EditHandle(category) )">Edit</button>
                        <button class="btn btn-link" type="button" @onclick="@( ()=>DeleteHandle(category) )">Delete</button>
                    </td>
                </tr>
            }
        </tbody>

    </table>
}

<br />
<button type="button" class="btn btn-primary" @onclick="NavigationToAddCategory">Add Category</button>

@code {
    private List<Category> categories;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        loadCategories();
    }

    private void NavigationToAddCategory()
    {
        navigationManager.NavigateTo("/addCategory");
    }

    private void EditHandle(Category category)
    {
        navigationManager.NavigateTo($"/editCategory/{category.categoryId}");
    }

    private void DeleteHandle(Category category)
    {
        categoryUseCase.DeleteCategory(category.categoryId);
        loadCategories();
    }

    private void loadCategories()
    {
        categories = categoryUseCase.GetCategories().ToList();
    }
}
